name: Deploy VM and Run Docker App

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      VM_USERNAME: "azureuser"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2  # Updated to official setup action
        with:
          terraform_version: "1.5.7"  # Pinned to a stable version

      - name: Terraform Init
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ env.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ env.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ env.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ env.AZURE_TENANT_ID }}

      - name: Format Terraform code
        run: terraform fmt -check

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Apply
        if: steps.plan.outcome == 'success'
        run: terraform apply -auto-approve

      - name: Get VM Public IP
        id: get_ip
        run: |
          VM_IP=$(terraform output -raw public_ip)
          echo "VM_IP=$VM_IP" >> $GITHUB_ENV
          echo "IP Address: $VM_IP"
        continue-on-error: true

      - name: Wait for SSH
        if: steps.get_ip.outcome == 'success'
        uses: fjogeleit/wait-for-remote-host@v1
        with:
          host: ${{ env.VM_IP }}
          port: 22
          timeout: 300

      - name: Install Docker
        if: steps.get_ip.outcome == 'success'
        run: |
          ssh -o StrictHostKeyChecking=no \
            ${{ env.VM_USERNAME }}@${{ env.VM_IP }} \
            "curl -fsSL https://get.docker.com -o get-docker.sh && sudo sh get-docker.sh"

      - name: Deploy App
        if: steps.get_ip.outcome == 'success'
        run: |
          scp -o StrictHostKeyChecking=no \
            ./your-app-files/* \
            ${{ env.VM_USERNAME }}@${{ env.VM_IP }}:/home/${{ env.VM_USERNAME }}/
          ssh -o StrictHostKeyChecking=no \
            ${{ env.VM_USERNAME }}@${{ env.VM_IP }} \
            "docker-compose up -d"
